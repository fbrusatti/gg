$(document).ready(function() {

  $("a.receipt-save").click( function() {
    if (checkProperties()) {
      invoicesSelected(invoiceTable);
      $("#new_receipt, [id^=edit_receipt_]").submit();
    }
  });

  $("a.receipt-cancel").click( function(event) {
    event.preventDefault();
    var path = this.href;
    if ($('#receipt_check_ids').val() == "") {
      window.location.href= path
      return;
    }
    $.ajax({
      type: "DELETE",
      url: "/checks/" + $('#receipt_check_ids').val(),
      dataType: "json",
    }).done(function(data, textStatus, xhr){
      window.location.href= path
    })
  })

  //Select customer in data tab 
  var invoiceTable;
  $('#receipt_customer_tokens').tokenInput('/customers.json', {
    crossDomain: false,
    prePopulate: $('#receipt_customer_token').data('pre'),
    theme: "facebook",
    tokenLimit: "1",
    minChars: "3",
    noResultsText: "<%= I18n.t('.token_input.noResultsText')%>",
    hintText: "<%= I18n.t('.token_input.hintText_surname')%>",
    searchingText: "<%= I18n.t('.token_input.searchingText')%>",
    resultsFormatter: function(item){
      return "<li><p style='color: black' >" + item.surname
      + " " + item.name +  " (" + item.registered_name + ") </p> </li>" },
    tokenFormatter: function(item) {
      return "<li><p>" + (item.surname + " " +
      item.name ).substring(0,22)+ " (" + item.registered_name + ") </p> </li>" },
    onAdd: function(data){ fillCustomerData(data) }
  });

  $("#receipt_customer_tokens").on("change", function(){
    $('#invoices-table').show();
    if (this.value == "") {
      $("#type_vat_label").text("");
      $("#registered_name_label").text("");
      $('#invoices-table_wrapper').hide();
    }
  });

  // Credit card functionality
  $(document).on("click", "a.button-save-card", function(){
    $("#receipts #new_card").submit();
    amountAuxCard = parseFloat($('#card_amount').val());
  });

  $(document).on("click", "a.button-new-card", function(){
    $.ajax({
      type: "GET",
      url: "/cards/new",
      dataType: "html"
    })
    .done(function(data, textStatus, xhr){
      $('#new-card').html(data);
      $('#new-card').show('slow');
    });  
  });

  $(document).on("click", "a#openBtn-name-card", function(){
    $('#card-modal').modal('show');
  });

  $('#add-new-name-card').click(function(){
    $('#card-modal').modal('hide');
    var sel = document.getElementById('card_name');
    var name = $('#new-name-card').val().toUpperCase();
    if (notExistsName(sel, name)){
      $('#card_name')
        .append($("<option></option>")
        .attr("value",name)
        .text(name)
      );
    }
    selectItemByValue(sel, name )
    $('#new-name-card').val('');
  });

  function selectItemByValue(elmnt, value){
    for(var i=0; i < elmnt.options.length; i++) {
      if(elmnt.options[i].text == value)
        elmnt.selectedIndex = i;
    }
  }

  function notExistsName(elmnt, value){
    var aReturn = true
    for(var i=0; i < elmnt.options.length; i++) {
      if(elmnt.options[i].text == value)
        aReturn = false;
    }
    return aReturn;
  }

  var ajaxCardResponded = false;
  $("#receipts #receipt_card").on('click', function(e){
    var card = $("#receipts #receipt_card");
    if (ajaxCardResponded == false) {
      $.ajax({
        type: "GET",
        url: "/cards/new",
        dataType: "html"
      })
      .done(function(data, textStatus, xhr){
        $('#new-card').html(data);
        $('#new-card').show('slow');
        ajaxCheckResponded = true;
        $('.card_date_time_picker').datetimepicker({
          language: 'es',
          pickDate: true,
          pickTime: false,
          maskInput: true,
          pick12HourFormat: true,
          pickSeconds: false,
          format: 'dd/MM/yyyy',
          startDate: 1910,
          endDate: Infinity
        });
      })
    } 
    if (card.prop('checked')) {
      $(this).parents(".thorizontal").siblings().toggle("show");
      $('#receipts #data-card').show("slow");
    } else {
      $('#receipts #data-card').hide("slow");
      card.parents(".thorizontal").siblings().hide();
    }
  });

  var amountAuxCard, showCardTable = false, amountCard = 0;
  $(document).on('ajax:success','#receipts #new_card', function(evt, data, status, xhr){
    $('#receipts #table-of-card').append(data);
    $('#receipts #table-of-card tr:last').effect("highlight", {}, 3000);
    $('#receipts #table-of-card').show("slow");
    $('#delete-card').attr("onclick", "deleteRowCard(this)");
    $('#receipts #new_card')[0].reset();
    ids_card = $('#receipt_card_ids').val();
    if (ids_card == "") {
      ids_card = $(data).data("card-id");
    } else {
      ids_card = ids_card + "," + $(data).data("card-id");
    }
    $('#receipt_card_ids').val(ids_card);
    showCardTable = true;
    amountCard = amountCard + amountAuxCard;
    $("#receipts #amount_card").text(amountCard);
    amount = amountCash + amountCheck + amountCard;
    $("#receipts #amount").text(amount);
  });
  //End credit card functionality

  //Check functionality
  $(document).on("click", "a.button-save", function(){
    $("#receipts #new_check").submit();
    amountAux = parseFloat($('#check_amount').val());
  });

  $(document).on("click", "a.button-update", function(){
    $("#receipts #edit_check_" + checkUpdate).submit();
    amountAux = parseFloat($('#check_amount').val());
  });  

  var ajaxCheckResponded = false;
  $("#receipts #check").on('click', function(e){
    var check = $("#receipts #check");
    if (ajaxCheckResponded == false) {
      $.ajax({
        type: "GET",
        url: "/checks/new",
        dataType: "html"
      })
      .done(function(data, textStatus, xhr){
        $('#new-check').html(data);
        $('#new-check').show('slow');
        ajaxCheckResponded = true;
        $('.check_date_time_picker').datetimepicker({
          language: 'es',
          pickDate: true,
          pickTime: false,
          maskInput: true,
          pick12HourFormat: true,
          pickSeconds: false,
          format: 'dd/MM/yyyy',
          startDate: 1910,
          endDate: Infinity
        });
      })
    }  
    if (check.prop('checked')) {
      $(this).parents(".thorizontal").siblings().toggle("show");
      $('#receipts #data-check').show("slow");
    } else {
      $('#receipts #data-check').hide("slow");
      check.parents(".thorizontal").siblings().hide();
    }
  });

  var amountAux, showCheckTable = false, amountCheck = 0;
  $(document).on('ajax:success','#receipts #new_check', function(evt, data, status, xhr){
    $('#receipts #table-of-check').append(data);
    $('#receipts #table-of-check tr:last').effect("highlight", {}, 3000);
    $('#receipts #table-of-check').show("slow");
    $('#delete-check').attr("onclick", "deleteRow(this)");
    $('#receipts #new_check')[0].reset();
    var ids = $('#receipt_check_ids').val();
    if (ids == "") {
      ids = $(data).data("check-id");
    } else {
      ids = ids + "," + $(data).data("check-id");
    }
    $('#receipt_check_ids').val(ids);
    showCheckTable = true;
    amountCheck = amountCheck + amountAux;
    $("#receipts #amount_check").text(amountCheck);
    amount = amountCash + amountCheck + amountCard;
    $("#receipts #amount").text(amount);
  });
  //End check functionality

  //Bank functionality
  $(document).on("click", "a#openBtn-bank", function(){
    $.ajax({
      type: "GET",
      url: "/banks/new",
      dataType: "html"
    })
    .done(function(data, textStatus, xhr){
      $('#bank-modal').html(data);
      $('#bank-modal').modal('show');
    })
  });

  $(document).on('ajax:success', '#new_bank', function(evt, data, status, xhr){
    $('#bank-modal').modal('hide');
    $('#check_bank_id')
      .append($("<option></option>")
      .attr("value",data.id)
      .text(data.name + " (" + data.branch_office_number + ")")
    );  
  });
  //End bank functionality

  //Changes the visibility of transactions inputs
  $("#receipts #cash").on('click', function(e){
    $(this).parents(".thorizontal").siblings().toggle("show");
  });

  $("#receipts #pay-tab").on('click', function(){
    if ($("#receipts #check").prop('checked')) {
      $('#receipts #data-check').show("slow");
    }
    if (showCheckTable) {
      $('#receipts #table-of-check').show("slow");
    }
    if ($("#receipts #receipt_card").prop('checked')) {
      $('#receipts #data-card').show("slow");
    }
    if (showCardTable) {
      $('#receipts #table-of-card').show("slow");
    }  
  });

  $("#data-tab").on('click', function(){
    $('#receipts #data-check').hide();
    $('#receipts #data-card').hide();
    $('#receipts #table-of-check').hide();
    $('#receipts #table-of-card').hide();
  });

  hiddenInputs();
  //End visibility transactions

  //Amount cash
  var amountCash = 0, amount = 0;
  $("#receipt_amount_cash").on('change', function(){
    amountCash = parseFloat(this.value);
    amount = amountCash + amountCheck + amountCard;
    $("#receipts #amount").text(amount);
  })

  function fillCustomerData(customer){
    $("#type_vat_label").text(customer.type_iva);
    $("#registered_name_label").text(customer.registered_name);
    invoiceTable = $('#invoices-table').dataTable({
      sPaginationType: "full_numbers",
      bJQueryUI: true,
      bProcessing: true,
      bServerSide: true,
      bDestroy: true,
      sAjaxSource: "/customers/" + customer.id,
      sAjaxDataProp: "table.aaData",
      sScrollY: "200",
      oLanguage: {
        sUrl: "/datatables/spanish.txt"
      }
    });
    multiSelectedRow(invoiceTable, "#invoices-table");
  }

});// End Document

function checkProperties () {
  if ($("#receipt_customer_tokens").val() == "") {
    alert("<%= I18n.t('.receipts.errors.not_customer')%>");
  } else if (($("#receipt_amount_cash").val() == "") && ($("#receipt_amount_cash").val() == "")) {
    alert("<%= I18n.t('.receipts.errors.not_amount')%>");
  } else {
    return true;
  }
}

function deleteRow(btn) {
  var row = btn.parentNode.parentNode;
  checkDelete = $(row).data('check-id');
  amountDeleted = parseFloat($('#check-amount').val());
  $.ajax({
    type: "DELETE",
    url: "/checks/" + checkDelete,
    dataType: "json",
  })
  .done(function(data, textStatus, xhr){
    row.parentNode.removeChild(row);
    amountCheck = parseFloat($("#amount_check").text());
    amountCheck = amountCheck - amountDeleted;
    $("#amount_check").text(amountCheck);
    amount = parseFloat($("#amount").text()) - amountDeleted;
    $("#amount").text(amount);
  });
}

function deleteRowCard(btn) {
  var row = btn.parentNode.parentNode;
  cardDelete = $(row).data('card-id');
  amountDeletedCard = parseFloat($('#card-amount-row').val());
  $.ajax({
    type: "DELETE",
    url: "/cards/" + cardDelete,
    dataType: "json",
  })
  .done(function(data, textStatus, xhr){
    row.parentNode.removeChild(row);
    amountCard = parseFloat($("#amount_card").text());
    amountCard = amountCard - amountDeletedCard;
    $("#amount_card").text(amountCard);
    amount = parseFloat($("#amount").text()) - amountDeletedCard;
    $("#amount").text(amount);
  });
}

function showCard(btn) {
  var row = btn.parentNode.parentNode;
  cardShow = $(row).data('card-id');
  $.ajax({
    type: "GET",
    url: "/cards/" + cardShow,
    dataType: "html",
  })
  .done(function(data, textStatus, xhr){
    $('#new-card').html(data);
    $('#new-card').show('slow');
  });  
}

var checkUpdate;
function editCheck(btn) {
  var row = btn.parentNode.parentNode;
  checkUpdate = $(row).data('check-id');
  amountUpdated = parseFloat($('#check-amount').val());
  $.ajax({
    type: "GET",
    url: "/checks/" + checkUpdate + "/edit",
    dataType: "html",
  })
  .done(function(data, textStatus, xhr){
    $('#new-check').html(data);
    $('#new-check').show('slow');
    row.parentNode.removeChild(row);
    amountCheck = parseFloat($("#amount_check").text());
    amountCheck = amountCheck - amountUpdated;
    $("#amount_check").text(amountCheck);
    amount = parseFloat($("#amount").text()) - amountUpdated;
    $("#amount").text(amount);
    var editFormCheck = '#edit_check_' + checkUpdate;
    $(document).on('ajax:success', editFormCheck, function(evt, data, status, xhr){
      $('#receipts #table-of-check').append(data);
      $('#receipts #table-of-check tr:last').effect("highlight", {}, 3000);
      $('#receipts #table-of-check').show("slow");
      var amountCheck = parseFloat($("#amount_check").text());
      var amountAux = parseFloat($("#check-amount").val());
      var amountCash = parseFloat($("#receipt_amount_cash").val());
      amountCheck = amountCheck + amountAux;
      $("#receipts #amount_check").text(amountCheck)
      var amount = amountCash + amountCheck;
      $("#receipts #amount").text(amount);
      $.ajax({
        type: "GET",
        url: "/checks/new",
        dataType: "html",
      })
      .done(function(data, textStatus, xhr){
        $('#new-check').html(data);
        $('#new-check').show('slow');
      }); 
    });
  });  
}

function invoicesSelected(oTable) {
  var invoice_ids = $('#receipt_invoice_ids').val();
  var invoices = fnGetSelected(oTable);
  var index = invoices.length;
  for (var i = 0; i < index; i++) {
    if (invoice_ids == "") {
      invoice_ids = invoices[i][0];
    } else {
      invoice_ids = invoice_ids + "," + invoices[i][0];
    }
  };
  $('#receipt_invoice_ids').val(invoice_ids);
}

function calculateAmount(oTable) {
  var total = 0;
  var invoices = fnGetSelected(oTable);
  var index = invoices.length;
  for (var i = 0; i < index; i++) {
    total = total + parseFloat(invoices[i][3]);
  }
  return total;
}

function hiddenInputs () {
  var check, cash, card;
  check = $('#receipts #check');
  cash = $('#receipts #cash');
  card = $('#receipts #receipt_card');
  if (!check.prop('checked')){
    $('#receipts #table-of-check').hide();
    $('#receipts #data-check').hide();
    $('#invoices-table').hide();
    check.parents(".thorizontal").siblings().hide();
  }
  if (!cash.prop('checked')) {
    cash.parents(".thorizontal").siblings().hide();
  }
  if (!card.prop('checked')) {
    $('#receipts #table-of-card').hide();
    card.parents(".thorizontal").siblings().hide();
  }
}

